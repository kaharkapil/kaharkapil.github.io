{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.service.ts","webpack:///src/app/chat/chat-box/chat-box.component.ts","webpack:///src/app/chat/chat-box/chat-box.component.html","webpack:///src/app/chat/chat-box/chat-route-guard.service.ts","webpack:///src/app/chat/chat.module.ts","webpack:///src/app/shared/first-char/first-char.component.ts","webpack:///src/app/shared/first-char/first-char.component.html","webpack:///src/app/shared/pipe/remove-special-char.pipe.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/user-details/user-details.component.ts","webpack:///src/app/shared/user-details/user-details.component.html","webpack:///src/app/socket.service.ts","webpack:///src/app/user/login/login.component.ts","webpack:///src/app/user/login/login.component.html","webpack:///src/app/user/signup/signup.component.ts","webpack:///src/app/user/signup/signup.component.html","webpack:///src/app/user/user.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","forRoot","path","component","pathMatch","redirectTo","declarations","imports","providers","bootstrap","AppService","http","url","getUserInfoFromLocalstorage","JSON","parse","localStorage","getItem","setUserInfoInLocalStorage","data","setItem","stringify","params","set","firstName","lastName","mobile","email","password","apiKey","post","get","err","errorMessage","error","message","status","console","ChatBoxComponent","SocketService","router","vcr","userList","scrollToChatTop","previousChatList","messageList","pageValue","loadingPreviousChat","verifyUserConfirmation","verifyUser","subscribe","disconnectedSocket","setUser","authToken","getOnlineUserList","onlineUserList","x","temp","push","log","getPreviousChatWithAUser","previousData","length","slice","getChat","userInfo","userId","receiverId","apiResponse","concat","alert","loadEarlierPageOfChat","setTimeout","userSelectedToChat","name","map","user","chatting","receiverName","chatDetails","senderId","markChatAsSeen","sendMessageUsingKeypress","event","keyCode","sendMessage","messageText","chatMsgObject","senderName","createdOn","Date","SendChatMessage","pushToChatWindow","getMessageFromAUser","chatByUserId","logout","exitSocket","navigate","undefined","read","ChatRouteGuardService","route","providedIn","ChatModule","forChild","canActivate","FirstCharComponent","_name","notify","userName","firstChar","changes","currentValue","emit","nameClicked","RemoveSpecialCharPipe","value","cahracter","replace","SharedModule","UserDetailsComponent","userFirstName","create","observer","socket","on","next","userDetails","disconnect","skip","handleError","LoginComponent","appService","goToSignup","signinFunction","SignupComponent","goToSignIn","signupFunction","UserModule","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'chat-application';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n//routing \nimport { RouterModule, Routes } from '@angular/router';\nimport { UserModule } from './user/user.module';\nimport { ChatModule } from './chat/chat.module';\nimport { LoginComponent } from './user/login/login.component';\nimport { AppService } from './app.service';\nimport { HttpClientModule } from '@angular/common/http';\n//import {ToastModule} from 'ng2-toastr/ng2-toastr';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n   // ToastModule.forRoot(),\n    ChatModule,\n    UserModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      { path: 'login', component: LoginComponent, pathMatch: 'full' },\n      { path: '', redirectTo: 'login', pathMatch: 'full' },\n      { path: '*', component: LoginComponent },\n      { path: '**', component: LoginComponent }\n    ])\n  ],\n  providers: [AppService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/toPromise';\nimport { HttpClient, HttpHeaders,HttpClientModule } from '@angular/common/http';\nimport { HttpErrorResponse, HttpParams } from \"@angular/common/http\";\n\n\n\n@Injectable()\nexport class AppService {\n\n  private url =  'https://chatapi.edwisor.com';\n\n  constructor(\n    public http: HttpClient\n  ) {\n\n    \n\n  } // end constructor  \n\n\n  public getUserInfoFromLocalstorage = () => {\n\n    return JSON.parse(localStorage.getItem('userInfo'));\n\n  } // end getUserInfoFromLocalstorage\n\n\n  public setUserInfoInLocalStorage = (data) =>{\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n\n\n  }\n\n  public signupFunction(data): Observable<any> {\n\n    const params = new HttpParams()\n      .set('firstName', data.firstName)\n      .set('lastName', data.lastName)\n      .set('mobile', data.mobile)\n      .set('email', data.email)\n      .set('password', data.password)\n      .set('apiKey', data.apiKey);\n\n    return this.http.post(`${this.url}/api/v1/users/signup`, params);\n\n  } // end of signupFunction function.\n\n  public signinFunction(data): Observable<any> {\n\n    const params = new HttpParams()\n      .set('email', data.email)\n      .set('password', data.password);\n\n    return this.http.post(`${this.url}/api/v1/users/login`, params);\n  } // end of signinFunction function.\n\n  \n  public logout(): Observable<any> {\n\n    const params = new HttpParams()\n      .set('authToken', Cookie.get('authtoken'))\n\n    return this.http.post(`${this.url}/api/v1/users/logout`, params);\n\n  } // end logout function\n\n  \n\n  private handleError(err: HttpErrorResponse) {\n\n    let errorMessage = '';\n\n    if (err.error instanceof Error) {\n\n      errorMessage = `An error occurred: ${err.error.message}`;\n\n    } else {\n\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n\n    } // end condition *if\n\n    console.error(errorMessage);\n\n    return Observable.throw(errorMessage);\n\n  }  // END handleError\n\n}\n","import { Component, OnInit, ViewContainerRef, ViewChild, ElementRef } from '@angular/core';\nimport { SocketService } from './../../socket.service';\nimport { AppService } from './../../app.service';\n\nimport { Router } from '@angular/router';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\nimport { ChatMessage } from '../chat';\n//import { ToastsManager } from 'ng2-toastr/ng2-toastr';\n\n\n@Component({\n  selector: 'app-chat-box',\n  templateUrl: './chat-box.component.html',\n  styleUrls: ['./chat-box.component.css'],\n  providers: [SocketService,AppService]\n})\n\nexport class ChatBoxComponent implements OnInit{\n\n  @ViewChild('scrollMe', { read: ElementRef }) \n  \n  public scrollMe: ElementRef;\n\n  \n\n  public authToken: any;\n  public userInfo: any;\n  public userList: any = [];\n  public disconnectedSocket: boolean;  \n\n  public scrollToChatTop:boolean= false;\n\n  public receiverId: any;\n  public receiverName: any;\n  public previousChatList: any = [];\n  public messageText: any; \n  public messageList: any = []; // stores the current message list display in chat box\n  public pageValue: number = 0;\n  public loadingPreviousChat: boolean = false;\n\n\n\n  constructor(\n    public AppService: AppService,\n    public SocketService: SocketService,\n    public router: Router,\n   // private toastr: ToastsManager,\n    vcr: ViewContainerRef,\n  ) {\n\n   \n    \n   // this.toastr.setRootViewContainerRef(vcr);\n\n\n  }\n\n\n\n  ngOnInit() {\n\n    this.authToken = Cookie.get('authtoken');\n\n    this.userInfo = this.AppService.getUserInfoFromLocalstorage();\n\n    this.receiverId = Cookie.get(\"receiverId\");\n\n    this.receiverName =  Cookie.get('receiverName');\n\n    console.log(this.receiverId,this.receiverName)\n\n    if(this.receiverId!=null && this.receiverId!=undefined && this.receiverId!=''){\n      this.userSelectedToChat(this.receiverId,this.receiverName)\n    }\n\n    //this.checkStatus();\n\n    this.verifyUserConfirmation();\n    this.getOnlineUserList()\n\n    this.getMessageFromAUser()\n\n\n\n  }\n  // commented checkStatus because we are using it through routeGuard chat-route-guard service.ts\n\n  // public checkStatus: any = () => {\n\n  //   if (Cookie.get('authtoken') === undefined || Cookie.get('authtoken') === '' || Cookie.get('authtoken') === null) {\n\n  //     this.router.navigate(['/']);\n\n  //     return false;\n\n  //   } else {\n\n  //     return true;\n\n  //   }\n\n  // } // end checkStatus\n\n\n\n  public verifyUserConfirmation: any = () => {\n\n    this.SocketService.verifyUser()\n      .subscribe((data) => {\n\n        this.disconnectedSocket = false;\n\n        this.SocketService.setUser(this.authToken);\n\n      });\n    }\n  \n  public getOnlineUserList :any =()=>{\n\n    this.SocketService.onlineUserList()\n      .subscribe((userList) => {\n\n        this.userList = [];\n\n        for (let x in userList) {\n\n          let temp = { 'userId': x, 'name': userList[x], 'unread': 0, 'chatting': false };\n\n          this.userList.push(temp);          \n\n        }\n        \n        console.log(this.userList);\n\n      }); // end online-user-list\n  }\n\n  // chat related methods \n\n\n  public getPreviousChatWithAUser :any = ()=>{\n    let previousData = (this.messageList.length > 0 ? this.messageList.slice() : []);\n    \n    this.SocketService.getChat(this.userInfo.userId, this.receiverId, this.pageValue * 10)\n    .subscribe((apiResponse) => {\n\n      console.log(apiResponse);\n\n      if (apiResponse.status == 200) {\n\n        this.messageList = apiResponse.data.concat(previousData);\n\n      } else {\n\n        this.messageList = previousData;\n       // this.toastr.warning('No Messages available')\n        alert('No Messages available');\n\n       \n\n      }\n\n      this.loadingPreviousChat = false;\n\n    }, (err) => {\n\n     // this.toastr.error('some error occured')\n     alert('some error occured');\n\n\n    });\n\n  }// end get previous chat with any user\n\n\n  public loadEarlierPageOfChat: any = () => {\n\n    this.loadingPreviousChat = true;\n\n    this.pageValue++;\n    this.scrollToChatTop = true;\n    setTimeout(() => {\n      this.getPreviousChatWithAUser() \n    }, 1);\n   \n  } // end loadPreviousChat\n\n  public userSelectedToChat: any = (id, name) => {\n\n    console.log(\"setting user as active\") \n\n    // setting that user to chatting true   \n    this.userList.map((user)=>{\n        if(user.userId==id){\n          user.chatting=true;\n        }\n        else{\n          user.chatting = false;\n        }\n    })\n\n    Cookie.set('receiverId', id);\n\n    Cookie.set('receiverName', name);\n\n\n    this.receiverName = name;\n\n    this.receiverId = id;\n\n    this.messageList = [];\n\n    this.pageValue = 0;\n\n    let chatDetails = {\n      userId: this.userInfo.userId,\n      senderId: id\n    }\n\n\n    this.SocketService.markChatAsSeen(chatDetails);\n\n    this.getPreviousChatWithAUser();\n\n  } // end userBtnClick function\n\n\n\n\n\n\n  public sendMessageUsingKeypress: any = (event: any) => {\n\n    if (event.keyCode === 13) { // 13 is keycode of enter.\n\n      this.sendMessage();\n\n    }\n\n  } // end sendMessageUsingKeypress\n\n  public sendMessage: any = () => {\n\n    if(this.messageText){\n\n      let chatMsgObject:ChatMessage = {\n        senderName: this.userInfo.firstName + \" \" + this.userInfo.lastName,\n        senderId: this.userInfo.userId,\n        receiverName: Cookie.get('receiverName'),\n        receiverId: Cookie.get('receiverId'),\n        message: this.messageText,\n        createdOn: new Date()\n      } // end chatMsgObject\n      console.log(chatMsgObject);\n      this.SocketService.SendChatMessage(chatMsgObject)\n      this.pushToChatWindow(chatMsgObject)\n      \n\n    }\n    else{\n      //this.toastr.warning('text message can not be empty')\n      alert('text message can not be empty');\n\n    }\n\n  } // end sendMessage\n\n  public pushToChatWindow : any =(data)=>{\n\n    this.messageText=\"\";\n    this.messageList.push(data);\n    this.scrollToChatTop = false;\n\n\n  }// end push to chat window\n\n  public getMessageFromAUser :any =()=>{\n\n      this.SocketService.chatByUserId(this.userInfo.userId)\n      .subscribe((data)=>{\n       \n\n        (this.receiverId==data.senderId)?this.messageList.push(data):'';\n\n       // this.toastr.success(`${data.senderName} says : ${data.message}`)\n       alert(`${data.senderName} says : ${data.message}`);\n\n        this.scrollToChatTop=false;\n\n      });//end subscribe\n\n  }// end get message from a user \n\n\n  public logout: any = () => {\n\n    this.AppService.logout()\n      .subscribe((apiResponse) => {\n\n        if (apiResponse.status === 200) {\n          console.log(\"logout called\")\n          Cookie.delete('authtoken');\n\n          Cookie.delete('receiverId');\n\n          Cookie.delete('receiverName');\n\n          this.SocketService.exitSocket()\n\n          this.router.navigate(['/']);\n\n        } else {\n          //this.toastr.error(apiResponse.message);\n          alert(apiResponse.message);\n\n        } // end condition\n\n      }, (err) => {\n       // this.toastr.error('some error occured')\n       alert('some error occured')\n\n\n      });\n\n  } // end logout\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n  }\n","<div class=\"container\">\n  <div class=\"row\">\n\n    <div class=\"displayBlockMobile\" style=\"position:fixed;width:100%;z-index:1;\">\n\n      <div class=\"col-sm-12 p-0\">\n\n        <nav class=\"navbar navbar-expand-md navbar-fixed navbar-dark bg-dark\">\n\n          <a class=\"navbar-brand text-white\">\n            {{userInfo.firstName}} {{userInfo.lastName}}\n            <i class=\"fa fa-circle online\" *ngIf=\"disconnectedSocket == false\"></i>\n            <i class=\"fa fa-circle offline\" *ngIf=\"disconnectedSocket == true\"></i>\n          </a>\n\n          <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n\n            <span class=\"navbar-toggler-icon\"></span>\n\n          </button>\n\n          <div class=\"collapse people-list navbar-collapse\" id=\"navbarSupportedContent\">\n\n            <ul class=\"list\">\n              <li class=\"p-2 typeOfChats\">\n                Online Users:\n              </li>\n              <li class=\"clearfix cursorPointer\" [ngClass]=\"{'activeChat': user.chatting == true}\" (click)=\"userSelectedToChat(user.userId, user.name)\"\n                *ngFor=\"let user of userList\">\n                <div class=\"userPresence\" *ngIf=\"user.userId != userInfo.userId\">\n                  <user-details [userFirstName]=\"user.name\" [userLastName]=\"''\" [userStatus]=\"'online'\" [messageRead]=\"user.unread\"></user-details>\n                </div>\n              </li>\n              \n            </ul>\n\n          </div>\n\n        </nav>\n\n      </div>\n\n    </div>\n\n    <div class=\"col-12 displayNoneMobile col-sm-4 col-md-4 people-list p-0\" id=\"people-list\">\n\n      <div class=\"p-3 text-white textCapitalize textCenter\">\n        {{userInfo.firstName}} {{userInfo.lastName}}\n        <i class=\"fa fa-circle online\" *ngIf=\"disconnectedSocket == false\"></i>\n        <i class=\"fa fa-circle offline\" *ngIf=\"disconnectedSocket == true\"></i>\n        <br>\n        <br>\n        <button (click)=\"logout()\" class=\"btn btn-info customButton\">Logout</button>\n      </div>\n\n      <ul class=\"list\">\n        <li class=\"p-2 typeOfChats\">\n          Online Users:\n        </li>\n        <li class=\"clearfix cursorPointer\" [ngClass]=\"{'activeChat': user.chatting == true}\"\n          *ngFor=\"let user of userList\" (click)=\"userSelectedToChat(user.userId, user.name)\">\n          <div class=\"userPresence\" *ngIf=\"user.userId != userInfo.userId\"  >\n            <user-details [userFirstName]=\"user.name\" [userLastName]=\"''\" [userStatus]=\"'online'\" [messageRead]=\"user.unread\"></user-details>\n          </div>\n        </li>\n       \n      </ul>\n\n\n    </div>\n\n    <div class=\"col-12 col-sm-8 col-md-8 chat\">\n      <div class=\"chat-header clearfix mobileMenu\" *ngIf=\"receiverName\">\n        <first-char [userName]=\"'receiverName'\" [userBg]=\"'blue'\" [userColor]=\"'white'\"></first-char>\n\n        <div class=\"chat-about\">\n          <div class=\"chat-with\">Chat with {{receiverName}}</div>\n        </div>\n      </div>\n      <!-- end chat-header -->\n\n      <div #scrollMe [scrollTop]=\"(scrollToChatTop)?0:scrollMe.scrollHeight\" class=\"chat-history\" *ngIf=\"receiverName\">\n\n        <ul>\n          <li class=\"textCenter\" *ngIf=\"receiverName\">\n\n            <span  class=\"cursorPointer\" (click)=\"loadEarlierPageOfChat()\">Load Previous Chat</span>\n\n            <br>\n\n            <span *ngIf=\"loadingPreviousChat == true\">Loading...</span>\n\n          </li>\n          <li class=\"clearfix\" *ngFor=\"let message of messageList\">\n            <div class=\"message-data\" [ngClass]=\"{'align-right': message.senderId == userInfo.userId}\">\n              <span class=\"message-data-time\">{{message?.createdOn | date: 'medium' }}</span> &nbsp; &nbsp;\n              <span class=\"message-data-name floatLeft\" *ngIf=\"message.senderId != userInfo.userId\">\n                <i class=\"fa fa-circle online\"></i> {{ message?.senderName }}</span>\n              <span class=\"message-data-name\" *ngIf=\"message.senderId == userInfo.userId\">{{ message?.senderName }}</span>\n              <i class=\"fa fa-circle me\" *ngIf=\"message.senderId == userInfo.userId\"></i>\n\n            </div>\n            <div class=\"message\" [ngClass]=\"{'float-right other-message': message.senderId == userInfo.userId, 'my-message': message.senderId != userInfo.userId}\">\n              {{message?.message | removeSpecialCharPipe: '#' | removeSpecialCharPipe: '$'}}\n            </div>\n          </li>\n\n        </ul>\n\n      </div>\n      <div *ngIf=\"!receiverName\" class=\"col-sm blankContent\">\n        Click on user for start a chat!!!\n      </div>\n      <!-- end chat-history -->\n\n      <div class=\"chat-message clearfix p-2\" *ngIf=\"receiverName\">\n        <textarea name=\"message-to-send\" id=\"message-to-send\" (keydown)=\"sendMessageUsingKeypress($event)\" [(ngModel)]=\"messageText\"\n          placeholder=\"Type your message\" rows=\"3\"></textarea>\n\n        <button (click)=\"sendMessage()\">Send</button>\n\n      </div>\n      <!-- end chat-message -->\n\n    </div>\n\n  </div>\n  <!-- end chat -->\n\n</div>\n<!-- end container -->\n\n\n\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatRouteGuardService implements CanActivate {\n\n  constructor(private router:Router) { }\n  canActivate(route:ActivatedRouteSnapshot):boolean {\n    \n    console.log(\"in guard service\");\n    \n    if (Cookie.get('authtoken') === undefined || Cookie.get('authtoken') === '' || Cookie.get('authtoken') === null){\n      this.router.navigate(['/']);\n    } else{\n      return true;\n    }\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChatBoxComponent } from './chat-box/chat-box.component';\nimport { RouterModule, Routes } from '@angular/router';\n//import {ToastModule} from 'ng2-toastr/ng2-toastr';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { SharedModule } from '../shared/shared.module';\nimport { UserDetailsComponent } from '../shared/user-details/user-details.component';\nimport { RemoveSpecialCharPipe } from './../shared/pipe/remove-special-char.pipe';\nimport { ChatRouteGuardService } from './chat-box/chat-route-guard.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    //ToastModule.forRoot(),\n    RouterModule.forChild([ \n      { path: 'chat', component: ChatBoxComponent,canActivate:[ChatRouteGuardService]}\n    ]),\n    SharedModule\n  ],\n  declarations: [ChatBoxComponent,RemoveSpecialCharPipe],\n  providers:[ChatRouteGuardService]\n\n})\nexport class ChatModule { }\n","import { Component, OnChanges, Input, EventEmitter, Output, OnInit, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'first-char',\n  templateUrl: './first-char.component.html',\n  styleUrls: ['./first-char.component.css']\n})\nexport class FirstCharComponent implements OnInit,OnChanges {\n\n  @Input() userName: string;\n  @Input() userBg: string;\n  @Input() userColor: string;\n\n  public firstChar: string;\n  private _name:string = '';\n\n  @Output()\n  notify: EventEmitter<String> = new EventEmitter<String>();\n\n\n\n  ngOnInit(): void {\n      this._name = this.userName;\n      this.firstChar = this._name[0];\n\n  } // end ngOnInit\n\n\n  ngOnChanges(changes: SimpleChanges){\n    let name  = changes.userName;\n    this._name = name.currentValue;\n    this.firstChar = this._name[0];\n  }\n\n\n  nameClicked(){\n    this.notify.emit(this._name);\n  }\n\n  \n\n   \n\n\n  }// end show full name\n  \n\n","<div (click)='nameClicked()'  class=\"crop\" [style.color]=\"userColor ? userColor :'white'\" [style.background]=\"userBg ? userBg :'blue'\">\n    {{firstChar}}\n  </div>","import {Pipe,PipeTransform} from '@angular/core';\r\nimport { calcPossibleSecurityContexts } from '@angular/compiler/src/template_parser/binding_parser';\r\n@Pipe({\r\n    name:'removeSpecialCharPipe'\r\n})\r\nexport class RemoveSpecialCharPipe implements PipeTransform{\r\n    transform(value:string, cahracter:string):string{\r\n        return value.replace(cahracter,'');\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserDetailsComponent } from './user-details/user-details.component';\nimport { FirstCharComponent } from './first-char/first-char.component';\nimport { FormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [UserDetailsComponent, FirstCharComponent],\n  imports: [\n    CommonModule\n  ],\n  exports:[\n    UserDetailsComponent,\n    FirstCharComponent,\n    FormsModule,\n    CommonModule\n  ]\n})\nexport class SharedModule { }\n","import { Component, OnChanges, Input, EventEmitter, Output, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.css']\n})\nexport class UserDetailsComponent implements OnInit {\n  @Input() userFirstName: any;\n  @Input() userLastName: string;\n  @Input() userStatus: string;\n  @Input() messageRead: string;\n  @Input() userColor: string;\n  @Input() userBg: string;\n\n  \n  public firstChar: string;\n\n\n  ngOnInit(): void {\n\n      this.firstChar = this.userFirstName[0];\n\n  } // end ngOnInit\n\n\n  // handling the click\n\n\n\n}\n","<div class=\"crop\" [style.color]=\"userColor ? userColor :'white' \" [style.background]=\"userBg ? userBg :'blue'\">\n    {{firstChar}}\n  </div>\n  <div class=\"about\">\n    <div class=\"name\">{{userFirstName}} {{userLastName}}\n      <i *ngIf=\"messageRead\" class=\"fa fa-circle warning\"></i>\n    </div>\n    <div class=\"status\">\n      <i class=\"fa fa-circle\" [ngClass]=\"userStatus\"></i>{{userStatus}}\n    </div>\n  </div>\n  ","import { Injectable } from '@angular/core';\n\n\nimport * as io from 'socket.io-client';\n\nimport { Observable, from } from 'rxjs';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\nimport \"rxjs-compat/add/operator/catch\";\nimport  \"rxjs-compat/add/operator/do\";\nimport \"rxjs-compat/add/operator/toPromise\";\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HttpErrorResponse, HttpParams } from \"@angular/common/http\";\n\n\n@Injectable()\nexport class SocketService {\n\n  private url = 'https://chatapi.edwisor.com';\n\n  private socket;\n\n\n  constructor(public http: HttpClient) {\n    // connection is being created.\n    // that handshake\n    this.socket = io(this.url);\n\n  }\n\n  // events to be listened \n\n  public verifyUser = () => {\n\n    return Observable.create((observer) => {\n\n      this.socket.on('verifyUser', (data) => {\n\n        observer.next(data);\n\n      }); // end Socket\n\n    }); // end Observable\n\n  } // end verifyUser\n\n  public onlineUserList = () => {\n\n    return Observable.create((observer) => {\n\n      this.socket.on(\"online-user-list\", (userList) => {\n\n        observer.next(userList);\n\n      }); // end Socket\n\n    }); // end Observable\n\n  } // end onlineUserList\n\n\n  public disconnectedSocket = () => {\n\n    return Observable.create((observer) => {\n\n      this.socket.on(\"disconnect\", () => {\n\n        observer.next();\n\n      }); // end Socket\n\n    }); // end Observable\n\n\n\n  } // end disconnectSocket\n\n  // end events to be listened\n\n  // events to be emitted\n\n  public setUser = (authToken) => {\n\n    this.socket.emit(\"set-user\", authToken);\n\n  } // end setUser\n\n  public markChatAsSeen = (userDetails) => {\n\n    this.socket.emit('mark-chat-as-seen', userDetails);\n\n  } // end markChatAsSeen\n\n\n\n  // end events to be emitted\n\n  // chat related methods \n\n  \n\n  public getChat(senderId, receiverId, skip): Observable<any> {\n\n    return this.http.get(`${this.url}/api/v1/chat/get/for/user?senderId=${senderId}&receiverId=${receiverId}&skip=${skip}&authToken=${Cookie.get('authtoken')}`)\n      .do(data => console.log('Data Received'))\n      .catch(this.handleError);\n\n  } // end logout function\n\n  public chatByUserId = (userId) => {\n\n    return Observable.create((observer) => {\n      \n      this.socket.on(userId, (data) => {\n\n        observer.next(data);\n\n      }); // end Socket\n\n    }); // end Observable\n\n  } // end chatByUserId\n\n  public SendChatMessage = (chatMsgObject) => {\n\n    this.socket.emit('chat-msg', chatMsgObject);\n\n  } // end getChatMessage\n\n\n  public exitSocket = () =>{\n\n\n    this.socket.disconnect();\n\n\n  }// end exit socket\n\n\n\n\n  private handleError(err: HttpErrorResponse) {\n\n    let errorMessage = '';\n\n    if (err.error instanceof Error) {\n\n      errorMessage = `An error occurred: ${err.error.message}`;\n\n    } else {\n\n      errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n\n    } // end condition *if\n\n    console.error(errorMessage);\n\n    return Observable.throw(errorMessage);\n\n  }  // END handleError\n\n}\n","import { Component, OnInit, ViewContainerRef } from '@angular/core';\nimport { AppService } from 'src/app/app.service';\nimport { Router } from '@angular/router';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\nimport { SocketService } from 'chat-app-pdf/5-socket-service/socket.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  providers:[AppService]\n})\nexport class LoginComponent implements OnInit {\n  public email: any;\n  public password: any;\n\n  constructor(\n    public appService: AppService,\n    public router: Router,\n    // private toastr:ToastsManager,\n    vcr: ViewContainerRef\n  ) { }\n\n\n  public goToSignup = () => {\n    this.router.navigate(['/signup']);\n  }\n\n  public signinFunction: any = () => {\n    if (!this.email) {\n      alert(\"enter email\");\n    }\n    else if (!this.password) {\n      alert(\"enter password\");\n    }\n    else {\n      let data = {\n        email: this.email,\n        password: this.password\n      }\n      this.appService.signinFunction(data).subscribe((apiResponse) => {\n        console.log(apiResponse);\n        if (apiResponse.status === 200) {\n          console.log(apiResponse)\n          Cookie.set('authtoken', apiResponse.data.authToken);\n          Cookie.set('receiverId', apiResponse.data.userDetails.userId);\n          Cookie.set('receiverName', apiResponse.data.userDetails.firstName + ' ' + apiResponse.data.userDetails.lastName);\n          this.appService.setUserInfoInLocalStorage(apiResponse.data.userDetails)\n          alert(\"Login Successful...!!!\");\n          setTimeout(() => {\n            this.router.navigate(['/chat']);\n\n          },2000)\n\n        } else {\n          alert(\"Some Error Occured\");\n        }\n      }, (err) => {\n        alert('(err)Some Error occured...!!!')\n      });\n    }// end condition\n  }//end SigninFunction\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\n\n    <a class=\"navbar-brand\" href=\"/\">My Chat</a>\n  \n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n      aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n  \n      <span class=\"navbar-toggler-icon\"></span>\n  \n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n  \n      <ul class=\"navbar-nav\">\n  \n        <li class=\"nav-item\">\n  \n          <a class=\"nav-link\" (click)=\"goToSignup()\">Sign-Up</a>\n  \n        </li>\n  \n      </ul>\n  \n    </div>\n  \n  </nav>\n  \n  <div class=\"row p-0 m-0\">\n  \n    <div class=\"col-sm\"></div>\n  \n    <div class=\"col-sm p-5\">\n  \n      <h2 class=\"form-signin-heading\">Please sign in</h2>\n  \n      <label for=\"inputEmail\" class=\"sr-only\">Email address</label>\n  \n      <input type=\"email\" id=\"inputEmail\" class=\"form-control\" [(ngModel)]=\"email\" placeholder=\"Email address\" required autofocus>\n  \n      <br>\n  \n      <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n  \n      <input type=\"password\" id=\"inputPassword\" class=\"form-control\" [(ngModel)]=\"password\" placeholder=\"Password\" required>\n  \n      <br>\n  \n      <button class=\"btn btn-lg btn-primary btn-block\" type=\"button\" (click)=\"signinFunction()\">Sign in</button>\n  \n    </div>\n  \n    <div class=\"col-sm\"></div>\n  \n  </div>\n  ","import { Component, OnInit, ViewContainerRef } from '@angular/core';\nimport { AppService } from 'src/app/app.service';\nimport { Router } from '@angular/router';\nimport { HttpClientModule,} from '@angular/common/http';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  public firstName: any;\n  public lastName: any;\n  public mobile: any;\n  public email: any;\n  public password: any;\n  public apiKey: any;\n\n  constructor(public appService: AppService, public router: Router, vcr: ViewContainerRef) { }\n  ngOnInit() {\n  }\n\n  public goToSignIn: any = () => {\n    this.router.navigate(['/']);\n\n  }// end goToSignIn\n\n  public signupFunction: any = () => {\n    if (!this.firstName) {\n      alert(\"Enter first name\");\n    }\n    else if (!this.lastName) {\n      alert(\"Enter last name\");\n    }\n    else if (!this.mobile) {\n      alert(\"Enter mobile\");\n    }\n    else if (!this.email) {\n      alert(\"Enter email\");\n    }\n    else if (!this.password) {\n      alert(\"Enter password\");\n    }\n    else if (!this.apiKey) {\n      alert(\"Enter apiKey\");\n    }\n    else {\n      let data = {\n        firstName: this.firstName,\n        lastName: this.lastName,\n        mobile: this.mobile,\n        email: this.email,\n        password: this.password,\n        apiKey: this.apiKey\n      }\n\n      console.log(data);\n      this.appService.signupFunction(data).subscribe((apiResponse) => {\n        console.log(apiResponse);\n\n        if (apiResponse.status === 200) {\n          alert(\"Signup Successfull...!!!\");\n\n          setTimeout(() => {\n\n            this.goToSignIn();\n\n          }, 2000);\n        } else {\n          alert(\"some error occured\");\n          //this.toastr.error(apiResponse.message);\n        }\n      }, (err) => {\n        alert(\"Some Error Occured(err)\");\n      });\n    } //end condition\n  }//end signupFunction\n}","<nav class=\"=navbar navbar-expand-md navbar-dark bg-dark\">\n    <a class=\"navbar-brand \" href=\"/\">My Chat</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item\">\n                <a class=\"nav-link\" (click)=\"goToSignIn()\">Sign-In</a>\n            </li>\n        </ul>\n    </div>\n\n</nav>\n\n<div class=\"row p-0 m-0\">\n    <div class=\"col-sm\"></div>\n    <div class=\"col-sm p-5\">\n        <h2 class=\"form-signin-heading\">Sign Up To Start Chat</h2>\n\n        <br>\n        <span>FirstName:</span>\n        <label for=\"inputFirstName\" class=\"sr-only\">FirstName</label>\n        <input type=\"text\" id=\"inputFirstName\" class=\"form-control\" [(ngModel)]=\"firstName\" placeholder=\"FirstName\"\n            required>\n        <br>\n\n        <span>LastName:</span>\n        <label for=\"inputLastName\" class=\"sr-only\">LastName</label>\n        <input type=\"text\" id=\"inputLastName\" class=\"form-control\" [(ngModel)]=\"lastName\" placeholder=\"LastName\"\n            required>\n        <br>\n\n        <span>Mobile:</span>\n        <label for=\"inputMobile\" class=\"sr-only\">Mobile</label>\n        <input type=\"text\" id=\"inputMobile\" class=\"form-control\" [(ngModel)]=\"mobile\" placeholder=\"Mobile\" required>\n        <br>\n\n        <span>Email:</span>\n        <label for=\"inputEmail\" class=\"sr-only\">Email address </label>\n        <input type=\"text\" id=\"inputEmail\" class=\"form-control\" [(ngModel)]=\"email\" placeholder=\"Email\" required>\n        <br>\n\n        <span>Password:</span>\n        <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n        <input type=\"password\" id=\"inputPassword\" class=\"form-control\" [(ngModel)]=\"password\" placeholder=\"Password\"\n            required>\n        <br>\n\n        <span>ApiKey:</span>\n        <label for=\"inputApiKey\" class=\"sr-only\">AuthKey</label>\n        <textarea type=\"password\" id=\"AuthKey\" class=\"form-control\" [(ngModel)]=\"apiKey\" placeholder=\"ApiKey\" required></textarea>\n        <br>\n\n        <button class=\"bt btn-primary btn-block\" type=\"button\" (click)=\"signupFunction()\">Sign-Up</button>\n\n    </div>\n\n    <div class=\"col-sm\"></div>\n\n</div> ","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { RouterModule,Routes } from '@angular/router';\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms'\n\n\n\n@NgModule({\n  declarations: [LoginComponent, SignupComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([\n      {path:'signup',component:SignupComponent}\n\n    ])\n  ]\n})\nexport class UserModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}